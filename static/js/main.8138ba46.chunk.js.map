{"version":3,"sources":["component/getNames.js","component/item.js","component/items.js","component/loadingSpinner.js","component/result.js","component/billSplitter.js","App.js","serviceWorker.js","index.js"],"names":["GetNames","props","names","length","state","name","id","id_count","count","i","push","addName","bind","handleForm","onNameChange","deleteName","e","console","log","target","this","parseInt","splice","setState","names_updated","sendNamesHere","preventDefault","value","onSubmit","map","index","key","type","className","placeholder","onChange","required","onClick","style","fontSize","Component","Item","price","contributions","select","srno","selectall","warning","warning_text","tax","individual_item_tax_show","prevProps","JSON","stringify","checked","step","handleChange","Items","contri","items","tax_equal","total_bill","every","item","taxes","addItem","itemChange","deleteItem","handleEqualTaxChange","getTotalBill","currentNames","parseFloat","item_tax","re","test","num","j","Math","round","charAt","split","flag","isNaN","sum","resultOfForm","alert","border","margin","padding","LoadingSpinner","Result","result","BillSpliter","new","loading","modal_show","handleGetNamesForm","getItemsAndTaxes","modalClose","data","people","axios","post","then","res","catch","err","show","Header","Title","Body","Footer","variant","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8138ba46.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\nclass GetNames extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (props.names.length == 0)\r\n      this.state = {\r\n        names: [{ name: \"\", id: 0 }],\r\n        id_count: 0,\r\n        count: 1\r\n      };\r\n    else {\r\n      let names = [];\r\n      for (let i = 0; i < props.names.length; i++)\r\n        names.push({ name: props.names[i], id: i });\r\n      this.state = {\r\n        names: names,\r\n        id_count: props.names.length - 1,\r\n        count: props.names.length\r\n      };\r\n    }\r\n    this.addName = this.addName.bind(this);\r\n    this.handleForm = this.handleForm.bind(this);\r\n    this.onNameChange = this.onNameChange.bind(this);\r\n    this.deleteName = this.deleteName.bind(this);\r\n  }\r\n\r\n  deleteName(e) {\r\n    console.log(e.target.id);\r\n    let names = this.state.names;\r\n    console.log(names);\r\n    for (let i = 0; i < names.length; i++) {\r\n      if (names[i].id == parseInt(e.target.id)) {\r\n        console.log(\"Found\");\r\n        names.splice(i, 1);\r\n      }\r\n    }\r\n    this.setState(\r\n      {\r\n        names: names,\r\n        count: this.state.count - 1\r\n      },\r\n      () => {\r\n        let names_updated = [];\r\n        for (let i = 0; i < this.state.count; i++) {\r\n          names_updated.push(this.state.names[i].name);\r\n        }\r\n        this.props.sendNamesHere(names_updated);\r\n      }\r\n    );\r\n  }\r\n\r\n  addName() {\r\n    let names = this.state.names;\r\n    names.push({ name: \"\", id: this.state.id_count + 1 });\r\n    this.setState({\r\n      id_count: this.state.id_count + 1,\r\n      names: names,\r\n      count: this.state.count + 1\r\n    });\r\n  }\r\n\r\n  handleForm(e) {\r\n    e.preventDefault();\r\n    let names = [];\r\n    for (let i = 0; i < this.state.count; i++) {\r\n      names.push(this.state.names[i].name);\r\n    }\r\n    console.log(names);\r\n    this.props.sendNamesHere(names);\r\n  }\r\n\r\n  onNameChange(e) {\r\n    console.log(e.target.id, e.target.value);\r\n    let names = this.state.names;\r\n    for (let i = 0; i < this.state.count; i++) {\r\n      console.log(names[i].id == e.target.id);\r\n      if (names[i].id == e.target.id) {\r\n        console.log(\"Here\");\r\n        names[i].name = e.target.value;\r\n      }\r\n    }\r\n    this.setState(\r\n      {\r\n        names: names\r\n      },\r\n      () => {\r\n        let names_updated = [];\r\n        for (let i = 0; i < this.state.count; i++) {\r\n          names_updated.push(this.state.names[i].name);\r\n        }\r\n        this.props.sendNamesHere(names_updated);\r\n      }\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <form id=\"target\" onSubmit={this.handleForm}>\r\n        Enter names of people contributing\r\n        <table>\r\n          <tbody>\r\n            {this.state.names.map((name, index) => (\r\n              <tr key={index}>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"person\"\r\n                    value={name.name}\r\n                    id={name.id}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter Name of Person\"\r\n                    onChange={this.onNameChange}\r\n                    required\r\n                  />\r\n                </td>\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  id={name.id}\r\n                  onClick={this.deleteName}\r\n                  style={{ fontSize: \"110%\" }}\r\n                >\r\n                  <i\r\n                    className=\"fa fa-trash\"\r\n                    id={name.id}\r\n                    onClick={this.deleteName}\r\n                  />\r\n                </button>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <div id=\"main\" />\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          id=\"add\"\r\n          onClick={this.addName}\r\n        >\r\n          Add Name\r\n        </button>\r\n        <br />\r\n        {/* <button type=\"submit\" className=\"btn btn-info\">\r\n          Start Splitting!\r\n        </button> */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GetNames;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Item extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n    this.state = {\r\n      id: props.id,\r\n      name: props.name,\r\n      price: props.price,\r\n      names: props.names,\r\n      contributions: props.contributions,\r\n      select: props.select,\r\n      srno: props.srno,\r\n      selectall: props.selectall,\r\n      warning: props.warning,\r\n      warning_text: props.warning_text,\r\n      tax: props.tax,\r\n      individual_item_tax_show: props.individual_item_tax_show,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (JSON.stringify(this.props) != JSON.stringify(prevProps)) {\r\n      console.log(\"Updated Item Component\");\r\n      this.setState({\r\n        id: this.props.id,\r\n        name: this.props.name,\r\n        price: this.props.price,\r\n        names: this.props.names,\r\n        contributions: this.props.contributions,\r\n        select: this.props.select,\r\n        selectall: this.props.selectall,\r\n        warning: this.props.warning,\r\n        warning_text: this.props.warning_text,\r\n        tax: this.props.tax,\r\n        individual_item_tax_show: this.props.individual_item_tax_show,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.select);\r\n    let names = (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"selectall\"\r\n                id={this.state.id}\r\n                checked={this.state.selectall}\r\n              />\r\n            </th>\r\n            <th>Names</th>\r\n            <th>Percentage of Contribution</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.state.names.map((name, index) => (\r\n            <tr key={index}>\r\n              <td>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name={\"select\" + index}\r\n                  id={this.state.id}\r\n                  checked={this.state.select[index]}\r\n                />\r\n              </td>\r\n              <td>{name}</td>\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  name={\"contribution\" + index}\r\n                  className=\"form-control\"\r\n                  id={this.state.id}\r\n                  placeholder=\"Enter Percentage\"\r\n                  value={this.state.contributions[index]}\r\n                />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n    return (\r\n      <div id={this.state.id} onChange={this.props.handleChange}>\r\n        <div>\r\n          <h4>Item #{this.state.srno}</h4>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"item\"\r\n                    className=\"form-control\"\r\n                    id={this.state.id}\r\n                    placeholder=\"Enter item\"\r\n                    value={this.state.name}\r\n                    required\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    className=\"form-control\"\r\n                    id={this.state.id}\r\n                    placeholder=\"Enter Price of item\"\r\n                    value={this.state.price}\r\n                    required\r\n                  />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <input type=\"checkbox\" name=\"equal\" id={this.state.id} />\r\n          Split Selected\r\n          <br />\r\n          {names}\r\n          {this.state.individual_item_tax_show ? (\r\n            <input\r\n              type=\"number\"\r\n              name=\"item_tax\"\r\n              className=\"form-control\"\r\n              id={this.state.id}\r\n              placeholder=\"Enter Tax on this item as %\"\r\n              value={this.state.tax}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Item;\r\n","import React, { Component } from \"react\";\r\nimport Item from \"./item\";\r\nimport { all } from \"q\";\r\n\r\nclass Items extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props.names);\r\n    let contri = [];\r\n    let select = [];\r\n    if (props.items.length == 0) {\r\n      for (let i = 0; i < props.names.length; i++) {\r\n        contri.push(\"\");\r\n        select.push(true);\r\n      }\r\n      this.state = {\r\n        names: props.names,\r\n        tax_equal: false,\r\n        total_bill: props.total_bill,\r\n        items: [\r\n          {\r\n            id: 0,\r\n            name: \"\",\r\n            price: \"\",\r\n            selectall: select.every((item) => {\r\n              return item;\r\n            }),\r\n            contributions: contri,\r\n            select: select,\r\n            warning: false,\r\n            warning_text: \"\",\r\n            tax: \"\",\r\n          },\r\n        ],\r\n        id_count: props.items.length - 1,\r\n        tax: props.taxes,\r\n        count: props.items.length,\r\n      };\r\n    } else\r\n      this.state = {\r\n        names: props.names,\r\n        tax_equal: false,\r\n        total_bill: props.total_bill,\r\n        items: props.items,\r\n        id_count: 0,\r\n        tax: props.taxes,\r\n        count: 1,\r\n      };\r\n    this.addItem = this.addItem.bind(this);\r\n    this.itemChange = this.itemChange.bind(this);\r\n    this.deleteItem = this.deleteItem.bind(this);\r\n    this.handleForm = this.handleForm.bind(this);\r\n    this.handleEqualTaxChange = this.handleEqualTaxChange.bind(this);\r\n    this.getTotalBill = this.getTotalBill.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let currentNames = this.props.names;\r\n    if (JSON.stringify(currentNames) != JSON.stringify(prevProps.names)) {\r\n      console.log(\"Updated Items\");\r\n      this.setState({\r\n        names: this.props.names,\r\n      });\r\n    }\r\n  }\r\n\r\n  getTotalBill() {\r\n    let total_bill = 0;\r\n    console.log(this.state);\r\n    if (this.state.tax_equal)\r\n      for (let i = 0; i < this.state.items.length; i++) {\r\n        let item = this.state.items[i];\r\n        let tax = 0;\r\n        let price = 0;\r\n        if (item.price !== \"\") price = parseFloat(item.price);\r\n        if (this.state.tax !== \"\") tax = parseFloat(this.state.tax);\r\n        total_bill += (price * (100 + tax)) / 100;\r\n      }\r\n    else {\r\n      for (let i = 0; i < this.state.items.length; i++) {\r\n        let item = this.state.items[i];\r\n        let item_tax = 0;\r\n        let tax = 0;\r\n        let price = 0;\r\n        if (item.price !== \"\") price = parseFloat(item.price);\r\n        if (item.tax !== \"\") item_tax = parseFloat(item.tax);\r\n        if (this.state.tax !== \"\") tax = parseFloat(this.state.tax);\r\n        console.log(price, item_tax, tax);\r\n        total_bill += (price * (100 + item_tax + tax)) / 100;\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      total_bill: total_bill,\r\n    });\r\n  }\r\n\r\n  deleteItem(e) {\r\n    console.log(e.target.id);\r\n    let items = this.state.items;\r\n    console.log(items);\r\n    for (let i = 0; i < items.length; i++) {\r\n      if (items[i].id == parseInt(e.target.id)) {\r\n        console.log(\"Found\");\r\n        items.splice(i, 1);\r\n      }\r\n    }\r\n    console.log(items);\r\n    this.setState({\r\n      items: items,\r\n      count: this.state.count - 1,\r\n    });\r\n  }\r\n\r\n  addItem() {\r\n    let items = this.state.items;\r\n    let contri = [];\r\n    let select = [];\r\n    for (let i = 0; i < this.state.names.length; i++) {\r\n      contri.push(\"\");\r\n      select.push(true);\r\n    }\r\n    items.push({\r\n      id: this.state.id_count + 1,\r\n      name: \"\",\r\n      price: \"\",\r\n      contributions: contri,\r\n      warning: false,\r\n      selectall: select.every((item) => {\r\n        return item;\r\n      }),\r\n      select: select,\r\n      warning_text: \"\",\r\n      tax: \"\",\r\n    });\r\n    this.setState({\r\n      id_count: this.state.id_count + 1,\r\n      items: items,\r\n      count: this.state.count + 1,\r\n    });\r\n  }\r\n\r\n  itemChange(e) {\r\n    console.log(e.target);\r\n    const re = /(\\d+(\\.\\d+)?)/;\r\n    let items = this.state.items;\r\n    if (e.target.name == \"tax\")\r\n      this.setState({ tax: e.target.value }, () => {\r\n        this.getTotalBill();\r\n      });\r\n    else\r\n      for (let i = 0; i < items.length; i++) {\r\n        if (items[i].warning) {\r\n          console.log(\"Here\");\r\n          items[i].warning = false;\r\n          items[i].warning_text = \"\";\r\n        }\r\n        if (parseInt(e.target.id) === items[i].id) {\r\n          console.log(items[i]);\r\n          let item = items[i];\r\n          if (e.target.name === \"item\") {\r\n            console.log(\"ITEM\");\r\n            item.name = e.target.value;\r\n          } else if (e.target.name === \"price\") {\r\n            if (e.target.value === \"\" || re.test(e.target.value)) {\r\n              console.log(\"PRICE\");\r\n              item.price = e.target.value;\r\n            }\r\n          } else if (e.target.name === \"item_tax\") {\r\n            if (e.target.value === \"\" || re.test(e.target.value)) {\r\n              console.log(\"TAX \" + e.target.value);\r\n              item.tax = e.target.value;\r\n            }\r\n          } else if (e.target.name === \"equal\") {\r\n            let num = 0;\r\n            for (let j = 0; j < this.state.names.length; j++) {\r\n              if (item.select[j]) num++;\r\n            }\r\n\r\n            for (let j = 0; j < this.state.names.length; j++) {\r\n              if (item.select[j])\r\n                item.contributions[j] = Math.round((100 / num) * 100) / 100;\r\n              else item.contributions[j] = \"\";\r\n            }\r\n          }\r\n          //  else if (e.target.name === \"equal\" && e.target.checked) {\r\n          //   let num = 0;\r\n          //   for (let j = 0; j < this.state.names.length; j++) {\r\n          //     if (item.select[j]) num++;\r\n          //   }\r\n\r\n          //   for (let j = 0; j < this.state.names.length; j++) {\r\n          //     if (item.select[j])\r\n          //       item.contributions[j] = Math.round((100 / num) * 100) / 100;\r\n          //     else item.contributions[j] = \"\";\r\n          //   }\r\n          // } else if (e.target.name === \"equal\" && !e.target.checked) {\r\n          //   for (let j = 0; j < this.state.names.length; j++) {\r\n          //     item.contributions[j] = \"\";\r\n          //   }\r\n          // }\r\n          else if (e.target.name === \"selectall\" && e.target.checked) {\r\n            item.selectall = true;\r\n            for (let j = 0; j < this.state.names.length; j++) {\r\n              item.select[j] = true;\r\n            }\r\n          } else if (e.target.name === \"selectall\" && !e.target.checked) {\r\n            item.selectall = false;\r\n            for (let j = 0; j < this.state.names.length; j++) {\r\n              item.select[j] = false;\r\n            }\r\n          } else if (e.target.name.charAt(0) === \"c\") {\r\n            item.contributions[\r\n              parseInt(e.target.name.split(\"contribution\")[1])\r\n            ] = e.target.value;\r\n          } else if (e.target.name.charAt(0) === \"s\") {\r\n            console.log(\r\n              item.select[parseInt(e.target.name.split(\"select\")[1])]\r\n            );\r\n            item.select[parseInt(e.target.name.split(\"select\")[1])] = !item\r\n              .select[parseInt(e.target.name.split(\"select\")[1])];\r\n            item.selectall = item.select.every((item) => {\r\n              return item;\r\n            });\r\n          }\r\n          console.log(item);\r\n          break;\r\n        }\r\n      }\r\n    console.log(items, this.state.count);\r\n    this.setState(\r\n      {\r\n        items: items,\r\n      },\r\n      () => {\r\n        this.getTotalBill();\r\n      }\r\n    );\r\n  }\r\n\r\n  handleForm(e) {\r\n    e.preventDefault();\r\n    console.log(this.state.items);\r\n    if (this.state.items.length) {\r\n      let tax = e.target.tax.value;\r\n      if (tax == \"\") tax = 0;\r\n      let items = [];\r\n      let flag = true;\r\n      for (let i = 0; i < this.state.count; i++) {\r\n        let item = this.state.items[i];\r\n        item.name = this.state.items[i].name;\r\n        if (!isNaN(parseFloat(this.state.items[i].price))) {\r\n          console.log(\"It is valid price\");\r\n          item.price = parseFloat(this.state.items[i].price);\r\n        } else {\r\n          console.log(\"It is not valid price\");\r\n          flag = false;\r\n          item.warning = true;\r\n          item.warning_text = \"Make sure Price is Numeric\";\r\n        }\r\n\r\n        let contri = [];\r\n        let sum = 0;\r\n        for (let j = 0; j < this.state.names.length; j++) {\r\n          if (this.state.items[i].contributions[j] === \"\") contri.push(0);\r\n          else contri.push(parseFloat(this.state.items[i].contributions[j]));\r\n          sum += contri[j];\r\n        }\r\n        if (item.tax === \"\") item.tax = 0;\r\n        if (!this.state.tax_equal) {\r\n          if (!isNaN(parseFloat(this.state.items[i].tax))) {\r\n            console.log(\"It is valid tax\");\r\n            item.tax = parseFloat(this.state.items[i].tax);\r\n            console.log(item.tax);\r\n          } else {\r\n            console.log(\"It is not valid tax\");\r\n            flag = false;\r\n            item.warning = true;\r\n            item.warning_text = \"Make sure Tax is Numeric\";\r\n          }\r\n        }\r\n\r\n        if (Math.round(sum) !== 100) {\r\n          flag = false;\r\n          item.warning = true;\r\n          item.warning_text = \"Make sure sum is 100\";\r\n        }\r\n        item.contri = contri;\r\n        items.push(item);\r\n      }\r\n      this.setState({\r\n        items: items,\r\n      });\r\n      console.log(items, tax);\r\n      if (flag)\r\n        this.props.resultOfForm(\r\n          items,\r\n          tax,\r\n          this.state.tax_equal,\r\n          this.state.total_bill\r\n        );\r\n    } else alert(\"Enter Items\");\r\n  }\r\n\r\n  handleEqualTaxChange(e) {\r\n    console.log(e.target.value);\r\n    const tax_equal = e.target.value === \"Yes\" ? true : false;\r\n    this.setState(\r\n      {\r\n        tax_equal: tax_equal,\r\n      },\r\n      () => {\r\n        this.getTotalBill();\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleForm}>\r\n        Are all items taxed equally?\r\n        <input\r\n          type=\"radio\"\r\n          name=\"equaltax\"\r\n          value=\"Yes\"\r\n          checked={this.state.tax_equal ? true : false}\r\n          onChange={this.handleEqualTaxChange}\r\n        />{\" \"}\r\n        Yes\r\n        <input\r\n          type=\"radio\"\r\n          name=\"equaltax\"\r\n          value=\"No\"\r\n          checked={this.state.tax_equal ? false : true}\r\n          onChange={this.handleEqualTaxChange}\r\n        />{\" \"}\r\n        No\r\n        <br />\r\n        <h3>Enter Items </h3>\r\n        {this.state.items.map((item, index) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              border: item.warning ? \"10px solid red\" : \"2px solid\",\r\n              margin: \"2%\",\r\n              padding: \"3%\",\r\n            }}\r\n          >\r\n            <h4>\r\n              <b>{item.warning_text}</b>\r\n            </h4>\r\n            <Item\r\n              srno={index + 1}\r\n              names={this.state.names}\r\n              id={item.id}\r\n              name={item.name}\r\n              price={item.price}\r\n              contributions={item.contributions}\r\n              select={item.select}\r\n              selectall={item.selectall}\r\n              handleChange={this.itemChange}\r\n              warning={item.warning}\r\n              warning_text={item.warning_text}\r\n              tax={item.tax}\r\n              individual_item_tax_show={!this.state.tax_equal}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              id={item.id}\r\n              onClick={this.deleteItem}\r\n            >\r\n              Delete Item\r\n            </button>\r\n          </div>\r\n        ))}\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          id=\"additem\"\r\n          onClick={this.addItem}\r\n        >\r\n          Add Item\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <table>\r\n          <tbody>\r\n            {this.state.tax_equal ? (\r\n              <tr>\r\n                <td>Enter total taxes</td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    name=\"tax\"\r\n                    className=\"form-control\"\r\n                    id=\"nameOfPerson\"\r\n                    placeholder=\"Enter Tax\"\r\n                    value={this.state.tax}\r\n                    onChange={this.itemChange}\r\n                    required\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              <tr>\r\n                <td>Enter Additional taxes as %</td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    name=\"tax\"\r\n                    className=\"form-control\"\r\n                    id=\"nameOfPerson\"\r\n                    value={this.state.tax}\r\n                    onChange={this.itemChange}\r\n                    placeholder=\"Enter Tax\"\r\n                  />\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n        <h3>Total Bill: Rs. {this.state.total_bill}</h3>\r\n        <button type=\"submit\" className=\"btn btn-success\">\r\n          Get Contributions\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Items;\r\n","import React from \"react\";\r\n\r\nconst LoadingSpinner = () => (\r\n  <div>\r\n    <i className=\"fa fa-spinner fa-spin\" /> Loading...\r\n  </div>\r\n);\r\n\r\nexport default LoadingSpinner;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Result extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      names: props.names,\r\n      result: props.result\r\n    };\r\n  }\r\n  render() {\r\n    return this.state.names.map((name, index) => (\r\n      <div>\r\n        {name} has to contribute <strong>Rs.{this.state.result[name]}</strong>\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default Result;\r\n","import React, { Component } from \"react\";\r\nimport GetNames from \"./getNames\";\r\nimport Items from \"./items\";\r\nimport axios from \"axios\";\r\nimport LoadingSpinner from \"./loadingSpinner\";\r\nimport Result from \"./result\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass BillSpliter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (props.new)\r\n      this.state = {\r\n        names: [],\r\n        items: [],\r\n        taxes: 0,\r\n        total_bill: 0,\r\n        loading: false,\r\n        modal_show: false,\r\n      };\r\n    else\r\n      this.state = {\r\n        names: props.names,\r\n        items: props.items,\r\n        taxes: props.taxes,\r\n        total_bill: props.total_bill,\r\n        loading: false,\r\n        modal_show: false,\r\n      };\r\n    this.handleGetNamesForm = this.handleGetNamesForm.bind(this);\r\n    this.getItemsAndTaxes = this.getItemsAndTaxes.bind(this);\r\n    this.modalClose = this.modalClose.bind(this);\r\n  }\r\n  handleGetNamesForm(names) {\r\n    console.log(names);\r\n    this.setState({\r\n      names: names,\r\n    });\r\n  }\r\n\r\n  modalClose() {\r\n    this.setState({\r\n      modal_show: false,\r\n    });\r\n  }\r\n\r\n  getItemsAndTaxes(items, taxes, tax_equal, total_bill) {\r\n    if (tax_equal) {\r\n      for (let i = 0; i < items.length; i++) items[i].tax = 0;\r\n    }\r\n    console.log(items, taxes);\r\n    let data = {\r\n      people: this.state.names,\r\n      items: items,\r\n      taxes: taxes,\r\n      total_bill: total_bill,\r\n    };\r\n\r\n    console.log(data);\r\n    this.setState({ loading: true, modal_show: true }, () => {\r\n      axios\r\n        .post(\"https://serene-fortress-92182.herokuapp.com/\", data)\r\n        .then((res) => {\r\n          this.setState({\r\n            loading: false,\r\n            result: res.data,\r\n          });\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Bill Spliter</h1>\r\n        <GetNames\r\n          names={this.state.names}\r\n          sendNamesHere={this.handleGetNamesForm}\r\n        />\r\n        {this.state.names.length > 0 ? (\r\n          <Items\r\n            names={this.state.names}\r\n            items={this.state.items}\r\n            taxes={this.state.taxes}\r\n            total_bill={this.state.total_bill}\r\n            resultOfForm={this.getItemsAndTaxes}\r\n          />\r\n        ) : (\r\n          <h4>Enter Names to Continue</h4>\r\n        )}\r\n        <Modal show={this.state.modal_show}>\r\n          <Modal.Header>\r\n            <Modal.Title>Result</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            {this.state.loading ? (\r\n              <LoadingSpinner />\r\n            ) : (\r\n              <Result names={this.state.names} result={this.state.result} />\r\n            )}\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.modalClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BillSpliter;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\nimport \"./App.css\";\r\nimport BillSpliter from \"./component/billSplitter\";\r\nclass App extends Component {\r\n  render() {\r\n    let names = [\"Prayuj\", \"Prayuj's Friend\"];\r\n    let items = [\r\n      {\r\n        id: 0,\r\n        name: \"Butter Chicken\",\r\n        price: 350,\r\n        selectall: true,\r\n        contributions: [50, 50],\r\n        select: [true, true],\r\n        warning: false,\r\n        warning_text: \"\",\r\n        tax: \"\",\r\n        contri: [50, 50],\r\n      },\r\n    ];\r\n    let taxes = 10;\r\n    let total_bill = 385;\r\n    return (\r\n      <BillSpliter\r\n        new={false}\r\n        names={names}\r\n        items={items}\r\n        taxes={taxes}\r\n        total_bill={total_bill}\r\n      ></BillSpliter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n// import GetNames from \"./component/getNames\";\r\n// import Items from \"./component/items\";\r\n// import axios from \"axios\";\r\n// import LoadingSpinner from \"./component/loadingSpinner\";\r\n// import Result from \"./component/result\";\r\n// import Modal from \"react-bootstrap/Modal\";\r\n// import Button from \"react-bootstrap/Button\";\r\n\r\n// class App extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       names: [],\r\n//       loading: false,\r\n//       modal_show: false\r\n//     };\r\n//     this.handleGetNamesForm = this.handleGetNamesForm.bind(this);\r\n//     this.getItemsAndTaxes = this.getItemsAndTaxes.bind(this);\r\n//     this.modalClose = this.modalClose.bind(this);\r\n//   }\r\n//   handleGetNamesForm(names) {\r\n//     console.log(names);\r\n//     this.setState({\r\n//       names: names\r\n//     });\r\n//   }\r\n\r\n//   modalClose() {\r\n//     this.setState({\r\n//       modal_show: false\r\n//     });\r\n//   }\r\n\r\n//   getItemsAndTaxes(items, taxes, tax_equal) {\r\n//     if (tax_equal) {\r\n//       for (let i = 0; i < items.length; i++) items[i].tax = 0;\r\n//     }\r\n//     console.log(items, taxes);\r\n//     let data = {\r\n//       people: this.state.names,\r\n//       items: items,\r\n//       taxes: taxes\r\n//     };\r\n\r\n//     console.log(data);\r\n//     this.setState({ loading: true, modal_show: true }, () => {\r\n//       axios\r\n//         .post(\"http://127.0.0.1:5000/\", data)\r\n//         .then(res => {\r\n//           this.setState({\r\n//             loading: false,\r\n//             result: res.data\r\n//           });\r\n//           console.log(res);\r\n//         })\r\n//         .catch(err => {\r\n//           console.log(err);\r\n//         });\r\n//     });\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"App\">\r\n//         <h1>Bill Spliter</h1>\r\n//         <GetNames sendNamesHere={this.handleGetNamesForm} />\r\n//         {this.state.names.length > 0 ? (\r\n//           <Items\r\n//             names={this.state.names}\r\n//             resultOfForm={this.getItemsAndTaxes}\r\n//           />\r\n//         ) : (\r\n//           <h4>Enter Names to Continue</h4>\r\n//         )}\r\n//         <Modal show={this.state.modal_show}>\r\n//           <Modal.Header>\r\n//             <Modal.Title>Result</Modal.Title>\r\n//           </Modal.Header>\r\n\r\n//           <Modal.Body>\r\n//             {this.state.loading ? (\r\n//               <LoadingSpinner />\r\n//             ) : (\r\n//               <Result names={this.state.names} result={this.state.result} />\r\n//             )}\r\n//           </Modal.Body>\r\n\r\n//           <Modal.Footer>\r\n//             <Button variant=\"secondary\" onClick={this.modalClose}>\r\n//               Close\r\n//             </Button>\r\n//           </Modal.Footer>\r\n//         </Modal>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
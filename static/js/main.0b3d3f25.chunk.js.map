{"version":3,"sources":["component/getNames.js","component/item.js","component/items.js","component/loadingSpinner.js","component/result.js","App.js","serviceWorker.js","index.js"],"names":["GetNames","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","names","name","id","id_count","count","addName","bind","assertThisInitialized","handleForm","onNameChange","deleteName","e","console","log","target","i","length","parseInt","splice","setState","push","preventDefault","sendNamesHere","value","_this2","react_default","a","createElement","onSubmit","map","index","key","type","className","placeholder","onChange","required","onClick","style","fontSize","Component","Item","contri","price","contributions","srno","warning","warning_text","prevProps","JSON","stringify","step","handleChange","Items","items","addItem","itemChange","deleteItem","currentNames","re","item","test","checked","Math","round","split","tax","flag","isNaN","parseFloat","sum","j","resultOfForm","alert","border","margin","padding","component_item","LoadingSpinner","Result","result","App","loading","modal_show","handleGetNamesForm","getItemsAndTaxes","modalClose","taxes","data","people","axios","post","then","res","catch","err","getNames","component_items","Modal_default","show","Header","Title","Body","loadingSpinner","Footer","Button_default","variant","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0b3d3f25.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\nclass GetNames extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      names: [{ name: \"\", id: 0 }],\r\n      id_count: 0,\r\n      count: 1\r\n    };\r\n    this.addName = this.addName.bind(this);\r\n    this.handleForm = this.handleForm.bind(this);\r\n    this.onNameChange = this.onNameChange.bind(this);\r\n    this.deleteName = this.deleteName.bind(this);\r\n  }\r\n\r\n  deleteName(e) {\r\n    console.log(e.target.id);\r\n    let names = this.state.names;\r\n    console.log(names);\r\n    for (let i = 0; i < names.length; i++) {\r\n      if (names[i].id == parseInt(e.target.id)) {\r\n        console.log(\"Found\");\r\n        names.splice(i, 1);\r\n      }\r\n    }\r\n    this.setState({\r\n      names: names,\r\n      count: this.state.count - 1\r\n    });\r\n  }\r\n\r\n  addName() {\r\n    let names = this.state.names;\r\n    names.push({ name: \"\", id: this.state.id_count + 1 });\r\n    this.setState({\r\n      id_count: this.state.id_count + 1,\r\n      names: names,\r\n      count: this.state.count + 1\r\n    });\r\n  }\r\n\r\n  handleForm(e) {\r\n    e.preventDefault();\r\n    let names = [];\r\n    for (let i = 0; i < this.state.count; i++) {\r\n      names.push(this.state.names[i].name);\r\n    }\r\n    console.log(names);\r\n    this.props.sendNamesHere(names);\r\n  }\r\n\r\n  onNameChange(e) {\r\n    console.log(e.target.id, e.target.value);\r\n    let names = this.state.names;\r\n    for (let i = 0; i < this.state.count; i++) {\r\n      console.log(names[i].id == e.target.id);\r\n      if (names[i].id == e.target.id) {\r\n        console.log(\"Here\");\r\n        names[i].name = e.target.value;\r\n      }\r\n    }\r\n    this.setState({\r\n      names: names\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <form id=\"target\" onSubmit={this.handleForm}>\r\n        Enter names of people contributing\r\n        <table>\r\n          <tbody>\r\n            {this.state.names.map((name, index) => (\r\n              <tr key={index}>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"person\"\r\n                    value={name.name}\r\n                    id={name.id}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter Name of Person\"\r\n                    onChange={this.onNameChange}\r\n                    required\r\n                  />\r\n                </td>\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  id={name.id}\r\n                  onClick={this.deleteName}\r\n                  style={{ fontSize: \"110%\" }}\r\n                >\r\n                  <i\r\n                    className=\"fa fa-trash\"\r\n                    id={name.id}\r\n                    onClick={this.deleteName}\r\n                  />\r\n                </button>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <div id=\"main\" />\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          id=\"add\"\r\n          onClick={this.addName}\r\n        >\r\n          Add Name\r\n        </button>\r\n        <br />\r\n        <button type=\"submit\" className=\"btn btn-success\">\r\n          Start Splitting!\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GetNames;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Item extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let contri = [];\r\n    for (let i = 0; i < props.names.length; i++) contri.push(0);\r\n    this.state = {\r\n      id: props.id,\r\n      name: props.name,\r\n      price: props.price,\r\n      names: props.names,\r\n      contributions: props.contributions,\r\n      srno: props.srno,\r\n      warning: props.warning,\r\n      warning_text: props.warning_text\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (JSON.stringify(this.props) != JSON.stringify(prevProps)) {\r\n      console.log(\"Updated Item Component\");\r\n      this.setState({\r\n        id: this.props.id,\r\n        name: this.props.name,\r\n        price: this.props.price,\r\n        names: this.props.names,\r\n        contributions: this.props.contributions,\r\n        warning: this.props.warning,\r\n        warning_text: this.props.warning_text\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let names = (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Names</th>\r\n            <th>Percentage of Contribution</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.state.names.map((name, index) => (\r\n            <tr key={index}>\r\n              <td>{name}</td>\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  name={\"contribution\" + index}\r\n                  className=\"form-control\"\r\n                  id={this.state.id}\r\n                  placeholder=\"Enter Percentage\"\r\n                  value={this.state.contributions[index]}\r\n                />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n    return (\r\n      <div id={this.state.id} onChange={this.props.handleChange}>\r\n        <div>\r\n          <h4>Item #{this.state.srno}</h4>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"item\"\r\n                    className=\"form-control\"\r\n                    id={this.state.id}\r\n                    placeholder=\"Enter item\"\r\n                    value={this.state.name}\r\n                    required\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    className=\"form-control\"\r\n                    id={this.state.id}\r\n                    placeholder=\"Enter Price of item\"\r\n                    value={this.state.price}\r\n                    required\r\n                  />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <input type=\"checkbox\" name=\"equal\" id={this.state.id} />\r\n          Split equally\r\n          <br />\r\n          {names}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Item;\r\n","import React, { Component } from \"react\";\r\nimport Item from \"./item\";\r\n\r\nclass Items extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props.names);\r\n    let contri = [];\r\n    for (let i = 0; i < props.names.length; i++) contri.push(\"\");\r\n    this.state = {\r\n      names: props.names,\r\n      items: [\r\n        {\r\n          id: 0,\r\n          name: \"\",\r\n          price: \"\",\r\n          contributions: contri,\r\n          warning: false,\r\n          warning_text: \"\"\r\n        }\r\n      ],\r\n      id_count: 0,\r\n      count: 1\r\n    };\r\n    this.addItem = this.addItem.bind(this);\r\n    this.itemChange = this.itemChange.bind(this);\r\n    this.deleteItem = this.deleteItem.bind(this);\r\n    this.handleForm = this.handleForm.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let currentNames = this.props.names;\r\n    if (JSON.stringify(currentNames) != JSON.stringify(prevProps.names)) {\r\n      console.log(\"Updated Items\");\r\n      this.setState({\r\n        names: this.props.names\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteItem(e) {\r\n    console.log(e.target.id);\r\n    let items = this.state.items;\r\n    console.log(items);\r\n    for (let i = 0; i < items.length; i++) {\r\n      if (items[i].id == parseInt(e.target.id)) {\r\n        console.log(\"Found\");\r\n        items.splice(i, 1);\r\n      }\r\n    }\r\n    console.log(items);\r\n    this.setState({\r\n      items: items,\r\n      count: this.state.count - 1\r\n    });\r\n  }\r\n\r\n  addItem() {\r\n    let items = this.state.items;\r\n    let contri = [];\r\n    for (let i = 0; i < this.state.names.length; i++) contri.push(\"\");\r\n    items.push({\r\n      id: this.state.id_count + 1,\r\n      name: \"\",\r\n      price: \"\",\r\n      contributions: contri,\r\n      warning: false,\r\n      warning_text: \"\"\r\n    });\r\n    this.setState({\r\n      id_count: this.state.id_count + 1,\r\n      items: items,\r\n      count: this.state.count + 1\r\n    });\r\n  }\r\n\r\n  itemChange(e) {\r\n    console.log(e.target);\r\n    const re = /(\\d+(\\.\\d+)?)/;\r\n    let items = this.state.items;\r\n    for (let i = 0; i < items.length; i++) {\r\n      if (items[i].warning) {\r\n        console.log(\"Here\");\r\n        items[i].warning = false;\r\n        items[i].warning_text = \"\";\r\n      }\r\n      if (parseInt(e.target.id) === items[i].id) {\r\n        console.log(\"MATCH\");\r\n        let item = items[i];\r\n        if (e.target.name === \"item\") {\r\n          console.log(\"ITEM\");\r\n          item.name = e.target.value;\r\n        }\r\n        if (e.target.name === \"price\") {\r\n          if (e.target.value === \"\" || re.test(e.target.value)) {\r\n            console.log(\"PRICE\");\r\n            item.price = e.target.value;\r\n          }\r\n        }\r\n        if (e.target.name === \"equal\" && e.target.checked) {\r\n          for (let i = 0; i < this.state.names.length; i++) {\r\n            item.contributions[i] =\r\n              Math.round((100 / this.state.names.length) * 100) / 100;\r\n          }\r\n        } else {\r\n          item.contributions[parseInt(e.target.name.split(\"contribution\")[1])] =\r\n            e.target.value;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    console.log(items, this.state.count);\r\n    this.setState({\r\n      items: items\r\n    });\r\n  }\r\n\r\n  handleForm(e) {\r\n    e.preventDefault();\r\n    if (this.state.items.length) {\r\n      let tax = e.target.tax.value;\r\n      let items = [];\r\n      let flag = true;\r\n      for (let i = 0; i < this.state.count; i++) {\r\n        let item = this.state.items[i];\r\n        item.name = this.state.items[i].name;\r\n        if (!isNaN(parseFloat(this.state.items[i].price))) {\r\n          console.log(\"It is valid price\");\r\n          item.price = parseFloat(this.state.items[i].price);\r\n        } else {\r\n          console.log(\"It is not valid price\");\r\n          flag = false;\r\n          item.warning = true;\r\n          item.warning_text = \"Make sure Price is Numeric\";\r\n        }\r\n        let contri = [];\r\n        let sum = 0;\r\n        for (let j = 0; j < this.state.names.length; j++) {\r\n          if (this.state.items[i].contributions[j] === \"\") contri.push(0);\r\n          else contri.push(parseFloat(this.state.items[i].contributions[j]));\r\n          sum += contri[j];\r\n        }\r\n\r\n        if (Math.round(sum) !== 100) {\r\n          flag = false;\r\n          item.warning = true;\r\n          item.warning_text = \"Make sure sum is 100\";\r\n        }\r\n        item.contri = contri;\r\n        items.push(item);\r\n      }\r\n      this.setState({\r\n        items: items\r\n      });\r\n      console.log(items, tax);\r\n      if (flag) this.props.resultOfForm(items, tax);\r\n    } else alert(\"Enter Items\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleForm}>\r\n        {this.state.items.map((item, index) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              border: item.warning ? \"10px solid red\" : \"2px solid\",\r\n              margin: \"2%\",\r\n              padding: \"3%\"\r\n            }}\r\n          >\r\n            <h4>\r\n              <b>{item.warning_text}</b>\r\n            </h4>\r\n            <Item\r\n              srno={index + 1}\r\n              names={this.state.names}\r\n              id={item.id}\r\n              name={item.name}\r\n              price={item.price}\r\n              contributions={item.contributions}\r\n              handleChange={this.itemChange}\r\n              warning={this.state.warning}\r\n              warning_text={this.state.warning_text}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              id={item.id}\r\n              onClick={this.deleteItem}\r\n            >\r\n              Delete Item\r\n            </button>\r\n          </div>\r\n        ))}\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          id=\"additem\"\r\n          onClick={this.addItem}\r\n        >\r\n          Add Item\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Enter total tax</td>\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  name=\"tax\"\r\n                  className=\"form-control\"\r\n                  id=\"nameOfPerson\"\r\n                  placeholder=\"Enter Tax\"\r\n                  required\r\n                />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Items;\r\n","import React from \"react\";\r\n\r\nconst LoadingSpinner = () => (\r\n  <div>\r\n    <i className=\"fa fa-spinner fa-spin\" /> Loading...\r\n  </div>\r\n);\r\n\r\nexport default LoadingSpinner;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Result extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      names: props.names,\r\n      result: props.result\r\n    };\r\n  }\r\n  render() {\r\n    return this.state.names.map((name, index) => (\r\n      <div>\r\n        {name} has to contribute <strong>Rs.{this.state.result[name]}</strong>\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default Result;\r\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"./App.css\";\nimport GetNames from \"./component/getNames\";\nimport Items from \"./component/items\";\nimport axios from \"axios\";\nimport LoadingSpinner from \"./component/loadingSpinner\";\nimport Result from \"./component/result\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      names: [],\n      loading: false,\n      modal_show: false\n    };\n    this.handleGetNamesForm = this.handleGetNamesForm.bind(this);\n    this.getItemsAndTaxes = this.getItemsAndTaxes.bind(this);\n    this.modalClose = this.modalClose.bind(this);\n  }\n  handleGetNamesForm(names) {\n    console.log(names);\n    this.setState({\n      names: names\n    });\n  }\n\n  modalClose() {\n    this.setState({\n      modal_show: false\n    });\n  }\n\n  getItemsAndTaxes(items, taxes) {\n    // {\"people\":[\"Prayuj\",\"Sagar\",\"Olivia\"],\"items\":[{\"name\":\"Butter Chicken\",\"price\":450,\"contri\":[50,25,25]}],\"taxes\":\"10\"}\n    console.log(items, taxes);\n    let data = {\n      people: this.state.names,\n      items: items,\n      taxes: taxes\n    };\n    this.setState({ loading: true, modal_show: true }, () => {\n      axios\n        .post(\"https://rocky-refuge-72367.herokuapp.com/\", data)\n        .then(res => {\n          this.setState({\n            loading: false,\n            result: res.data\n          });\n          console.log(res);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Bill Spliter</h1>\n        <GetNames sendNamesHere={this.handleGetNamesForm} />\n        {this.state.names.length > 0 ? (\n          <Items\n            names={this.state.names}\n            resultOfForm={this.getItemsAndTaxes}\n          />\n        ) : (\n          <h4>Enter Names to Continue</h4>\n        )}\n        <Modal show={this.state.modal_show}>\n          <Modal.Header>\n            <Modal.Title>Result</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            {this.state.loading ? (\n              <LoadingSpinner />\n            ) : (\n              <Result names={this.state.names} result={this.state.result} />\n            )}\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.modalClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}